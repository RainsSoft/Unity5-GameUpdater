// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using UnityEditor;
using System.Collections;
using UnityEngine;
using System;
using System.Reflection;
using wuxingogo.Reflection;


public class XWebWindow : XBaseWindow
{
	[MenuItem( "Wuxingogo/Wuxingogo XWebWindow #]" )]
    static void init()
    {
		XWebWindow window = InitWindow<XWebWindow>();
    }

	public override void OnInitialization(params object[] args){
	    
		webViewType = XReflectionUtils.TryGetClass("WebView");
		//Init web view
		InitWebView();

    }

    void InitWebView(){
		webView = ScriptableObject.CreateInstance(webViewType);
		Type type = this.GetType().BaseType;
		object hostView = this.TryGetFieldValue("m_Parent");
		webView.GetType().TryInvokeMethod(webView, "InitWebView", hostView, 20, 150,(int)position.width - 40 ,(int)position.height - 200,false);
		webView.GetType().TryInvokeMethod(webView, "set_hideFlags", 13);

		webView.GetType().TryInvokeMethod(webView, "LoadURL", urlText);
		webView.GetType().TryInvokeMethod(webView, "SetDelegateObject", this);

		this.wantsMouseMove = true;
    }

	static BindingFlags fullBinding = BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static;
	static StringComparison ignoreCase = StringComparison.CurrentCultureIgnoreCase;
	
	object webView; 
	Type webViewType;

	
	Vector2 resizeStartPos;
	Rect resizeStartWindowSize;
	
	string urlText = EditorPrefs.GetString("xwebview_store", "unity3d.com/cn/");

    public override void OnXGUI()
    {
    	BeginHorizontal();
		if(CreateSpaceButton("DeFocus"))
			webView.GetType().TryInvokeMethod(webView, "SetFocus", false);

		DoButton<string>("UnityScript", SetUrl, "http://docs.unity3d.com/ScriptReference/index.html");
		DoButton<string>("Google", SetUrl, "www.gooogle.com");
		DoButton<string>("Github", SetUrl, "github.com/wuxingogo");
		DoButton<string>("Weibo", SetUrl, "weibo.com/52111314ly?source=blog");
		DoButton<string>("Zhihu", SetUrl, "http://www.zhihu.com/");

		EndHorizontal();
		
		CreateLabel("URL");
		urlText = CreateStringField(urlText);
		
		//Focus on web view if return is pressed in URL field
		if(Event.current.isKey && Event.current.keyCode == KeyCode.Return) {
			

			if(urlText != "")
				SetUrl(urlText);
		}

		if(CreateSpaceButton("Setting")){
			XMethodWindow window = InitWindow<XMethodWindow>();
			window.Target = webView;
		}
    }

	private void OnWebViewDirty() {
		this.Repaint();
	}

	public void SetUrl(string str){
		webView.GetType().TryInvokeMethod(webView, "LoadURL", urlText);
		webView.GetType().TryInvokeMethod(webView, "SetFocus", true);
		urlText = str;
		EditorPrefs.SetString("xwebview_store", urlText);
	}

//	void OnDestroy() {
////		Destroy web view
//		webViewType.GetMethod("DestroyWebView", fullBinding).Invoke(webView, null);
//	}
}
